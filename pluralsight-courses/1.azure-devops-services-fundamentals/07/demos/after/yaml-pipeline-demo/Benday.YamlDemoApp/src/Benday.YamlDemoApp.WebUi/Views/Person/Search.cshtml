@model Benday.YamlDemoApp.WebUi.Models.PersonSearchViewModel

@{
ViewBag.Title = "Person Search";
}

    <h2>
    Person Search
    </h2>

@using (Html.BeginForm(method: FormMethod.Get))
{
@Html.AntiForgeryToken()

    <div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
        <div class="border">
        
        
            <div class="form-group mt-2">
            @Html.LabelFor(model => model.SimpleSearchValue, htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                @Html.EditorFor(model => model.SimpleSearchValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SimpleSearchValue, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header" id="detailedSearchHeader">
                <h2 class="mb-0">
                    <button class="btn btn-link"
                    type="button"
                    data-toggle="collapse"
                    data-target="#collapseDetailedSearch"
                    aria-expanded="true"
                    aria-controls="collapseDetailedSearch">
                    detailed search
                    </button>
                </h2>
            </div>
        
            <div id="collapseDetailedSearch" class="collapse hide" aria-labelledby="detailedSearchHeader">
                <div class="card-body">
                    <div class="form-group">
                    @Html.ValidationMessageFor(model => model.IsSimpleSearch, "", new { @class = "text-danger" })
                    @Html.LabelFor(model => model.IsSimpleSearch, htmlAttributes: new { @class = "control-label col-md-3" })
                    @Html.EditorFor(model => model.IsSimpleSearch, new { htmlAttributes = new { @class = "form-check-input" } })
                    </div>
                    <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                    @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                        @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                    @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                        @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreatedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                    @Html.LabelFor(model => model.LastModifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                        @Html.EditorFor(model => model.LastModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastModifiedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                
                
                </div>
            </div>
        </div>
    
    
        <div class="form-group mt-2">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default btn-primary mx-2" />
            </div>
        </div>
    </div>
@Html.HiddenFor(model => model.CurrentSortProperty)
@Html.HiddenFor(model => model.CurrentSortDirection)
    <table class="table table-striped table-hover">
        <thead class="thead-light">
            <tr>
            @if(Model.CurrentSortProperty == "FirstName" &&
            Model.CurrentSortDirection == Benday.Common.SearchConstants.SortDirectionAscending)
            {
                <th>
                    <button type="submit" name="sortBy" value="FirstName" class="btn btn-link">
                        <b>
                        first name &uarr;
                        </b>
                    </button>
                </th>
            }
            else if(Model.CurrentSortProperty == "FirstName" &&
            Model.CurrentSortDirection == Benday.Common.SearchConstants.SortDirectionDescending)
            {
                <th>
                    <button type="submit" name="sortBy" value="FirstName" class="btn btn-link">
                        <b>
                        first name &darr;
                        </b>
                    </button>
                </th>
            }
            else
            {
                <th>
                    <button type="submit" name="sortBy" value="FirstName" class="btn btn-link">
                    first name
                    </button>
                </th>
            }
            @if(Model.CurrentSortProperty == "LastName" &&
            Model.CurrentSortDirection == Benday.Common.SearchConstants.SortDirectionAscending)
            {
                <th>
                    <button type="submit" name="sortBy" value="LastName" class="btn btn-link">
                        <b>
                        last name &uarr;
                        </b>
                    </button>
                </th>
            }
            else if(Model.CurrentSortProperty == "LastName" &&
            Model.CurrentSortDirection == Benday.Common.SearchConstants.SortDirectionDescending)
            {
                <th>
                    <button type="submit" name="sortBy" value="LastName" class="btn btn-link">
                        <b>
                        last name &darr;
                        </b>
                    </button>
                </th>
            }
            else
            {
                <th>
                    <button type="submit" name="sortBy" value="LastName" class="btn btn-link">
                    last name
                    </button>
                </th>
            }
            @if(Model.CurrentSortProperty == "PhoneNumber" &&
            Model.CurrentSortDirection == Benday.Common.SearchConstants.SortDirectionAscending)
            {
                <th>
                    <button type="submit" name="sortBy" value="PhoneNumber" class="btn btn-link">
                        <b>
                        phone number &uarr;
                        </b>
                    </button>
                </th>
            }
            else if(Model.CurrentSortProperty == "PhoneNumber" &&
            Model.CurrentSortDirection == Benday.Common.SearchConstants.SortDirectionDescending)
            {
                <th>
                    <button type="submit" name="sortBy" value="PhoneNumber" class="btn btn-link">
                        <b>
                        phone number &darr;
                        </b>
                    </button>
                </th>
            }
            else
            {
                <th>
                    <button type="submit" name="sortBy" value="PhoneNumber" class="btn btn-link">
                    phone number
                    </button>
                </th>
            }
            @if(Model.CurrentSortProperty == "EmailAddress" &&
            Model.CurrentSortDirection == Benday.Common.SearchConstants.SortDirectionAscending)
            {
                <th>
                    <button type="submit" name="sortBy" value="EmailAddress" class="btn btn-link">
                        <b>
                        email address &uarr;
                        </b>
                    </button>
                </th>
            }
            else if(Model.CurrentSortProperty == "EmailAddress" &&
            Model.CurrentSortDirection == Benday.Common.SearchConstants.SortDirectionDescending)
            {
                <th>
                    <button type="submit" name="sortBy" value="EmailAddress" class="btn btn-link">
                        <b>
                        email address &darr;
                        </b>
                    </button>
                </th>
            }
            else
            {
                <th>
                    <button type="submit" name="sortBy" value="EmailAddress" class="btn btn-link">
                    email address
                    </button>
                </th>
            }
            
                <th>
                </th>
            </tr>
        </thead>
    @if (Model.Results == null || Model.Results.PageValues == null || Model.Results.PageValues.Count == 0)
    {
        <tr>
            <td colspan="100">
            (no results)
            </td>
        </tr>
    }
    else
    {
    @foreach (var item in Model.Results.PageValues) {
        <tr class="clickable-tr" onclick="handleRowClick(this)" data-href="@Url.Action("Details", new { id = item.Id })">
            <td>
            @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.EmailAddress)
            </td>
        
            <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }
    }
    </table>

@await Html.PartialAsync("_PageableResultsControl", Model.Results)
}